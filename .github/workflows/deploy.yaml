name: Monorepo Deploy (Next.js + Node.js)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    name: Deploy Frontend to Netlify
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.event.head_commit.added || github.event.head_commit.modified }}
    defaults:
      run:
        working-directory: frontend

    steps:
      # Step 1: Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Cache node_modules
      - name: Cache frontend node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}

      # Step 4: Install and Build
      - name: Install Dependencies
        run: npm ci

      - name: Build Next.js
        run: npm run build

      # Step 5: Deploy to Netlify
      - name: Deploy to Netlify
        run: npx netlify-cli deploy --prod --dir=.next
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    needs: deploy-frontend

    steps:
      # Step 1: Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 3: Cache backend node_modules
      - name: Cache backend node_modules
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}

      # Step 4: Install and Build Backend
      - name: Install Dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      # Step 5: Trigger Render Deploy
      - name: Trigger Render Deploy
        run: |
          curl -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
